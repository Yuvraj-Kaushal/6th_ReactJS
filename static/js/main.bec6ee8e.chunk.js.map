{"version":3,"sources":["components/Header.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Note","props","className","title","content","onClick","event","preventDefault","delete","id","IconButton","aria-label","CreateArea","params","useState","text","setText","isExpanded","setExpanded","storeText","target","value","name","preValue","autoComplete","onChange","placeholder","rows","Zoom","in","Fab","newNote","App","localStorageData","localStorage","getItem","JSON","parse","noteArray","setNoteArray","deleteNote","filter","eachNote","index","useEffect","setItem","stringify","note","trim","alert","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAUeA,MARf,WACE,OACE,gCACE,uC,yBCoBSC,MArBf,SAAcC,GAOZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SAEV,4BAAQC,QAXZ,SAAoBC,GAClBA,EAAMC,iBAENN,EAAMO,OAAOP,EAAMQ,MASf,kBAACC,EAAA,EAAD,CAAYC,aAAW,UACrB,kBAAC,IAAD,U,iDCmDKC,MAhEf,SAAoBC,GAClB,MAAwBC,mBAAS,CAC/BX,MAAO,GACPC,QAAS,KAFX,mBAAOW,EAAP,KAAaC,EAAb,KAKA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KAMA,SAASC,EAAUb,GACjB,MAAwBA,EAAMc,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAEfN,GAAQ,SAAAO,GACN,OAAO,2BACFA,GADL,kBAEGD,EAAOD,OAgBd,OACE,yBAAKnB,UAAU,WACb,0BAAMA,UAAU,eACbe,GACC,2BACEO,aAAa,MACbH,MAAON,EAAKZ,MACZsB,SAAUN,EACVG,KAAK,QACLI,YAAY,UAGhB,8BACErB,QAvCR,WACEa,GAAY,IAuCNG,MAAON,EAAKX,QACZqB,SAAUN,EACVG,KAAK,UACLI,YAAY,kBACZC,KAAMV,EAAa,IAAM,MAE3B,kBAACW,EAAA,EAAD,CAAMC,GAAIZ,GACR,kBAACa,EAAA,EAAD,CAAKzB,QAhCb,SAAuBC,GACrBA,EAAMC,iBAENM,EAAOkB,QAAQhB,GAEfC,EAAQ,CACNb,MAAO,GACPC,QAAS,OA0BH,kBAAC,IAAD,WCLG4B,MAnDf,WACE,MAAkClB,oBAAS,WACzC,IAAMmB,EAAmBC,aAAaC,QAAQ,SAC9C,OAAOF,EAAmBG,KAAKC,MAAMJ,GAAoB,MAF3D,mBAAOK,EAAP,KAAkBC,EAAlB,KAmBA,SAASC,EAAW/B,GAClB8B,GAAa,SAAChB,GACZ,OAAOA,EAASkB,QAAO,SAACC,EAAUC,GAChC,OAAOA,IAAUlC,QAKvB,OAtBAmC,qBAAU,WACRV,aAAaW,QAAQ,QAAST,KAAKU,UAAUR,MAC5C,CAACA,IAsBF,yBAAKpC,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAY6B,QAtBhB,SAAiBgB,GACW,KAAtBA,EAAK5C,MAAM6C,QAAyC,KAAxBD,EAAK3C,QAAQ4C,OAC3CT,GAAa,SAAChB,GACZ,MAAM,GAAN,mBAAWA,GAAX,CAAqBwB,OAGvBE,MAAM,gCAiBN,yBAAK/C,UAAU,mBACfoC,EAAUY,KAAI,SAACH,EAAMJ,GACnB,OACE,kBAAC,EAAD,CACEQ,IAAKR,EACLlC,GAAIkC,EACJxC,MAAO4C,EAAK5C,MACZC,QAAS2C,EAAK3C,QACdI,OAAQgC,UC1CpBY,IAASC,OACL,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.bec6ee8e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Notes</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nfunction Note(props) {\n  function onBtnClick(event) {\n    event.preventDefault();\n\n    props.delete(props.id);\n  }\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n\n      <button onClick={onBtnClick}>\n        <IconButton aria-label=\"delete\">\n          <DeleteIcon />\n        </IconButton>\n      </button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea(params) {\n  const [text, setText] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  const [isExpanded, setExpanded] = useState(false);\n\n  function expand() {\n    setExpanded(true);\n  }\n\n  function storeText(event) {\n    const { value, name } = event.target;\n\n    setText(preValue => {\n      return {\n        ...preValue,\n        [name]: value\n      };\n    });\n  }\n\n  function OnButtonClick(event) {\n    event.preventDefault();\n\n    params.newNote(text);\n    \n    setText({\n      title: \"\",\n      content: \"\"\n    });\n  }\n\n  return (\n    <div className=\"formDiv\">\n      <form className=\"create-note\">\n        {isExpanded && (\n          <input\n            autoComplete=\"off\"\n            value={text.title}\n            onChange={storeText}\n            name=\"title\"\n            placeholder=\"Title\"\n          />\n        )}\n        <textarea\n          onClick={expand}\n          value={text.content}\n          onChange={storeText}\n          name=\"content\"\n          placeholder=\"Write a note...\"\n          rows={isExpanded ? \"3\" : \"1\"}\n        />\n        <Zoom in={isExpanded}>\n          <Fab onClick={OnButtonClick}>\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  const [noteArray, setNoteArray] = useState(() => {\n    const localStorageData = localStorage.getItem(\"notes\");\n    return localStorageData ? JSON.parse(localStorageData) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(noteArray));\n  }, [noteArray])\n\n  function addNote(note) {\n    if (note.title.trim() !== \"\" && note.content.trim() !== \"\") {\n      setNoteArray((preValue) => {\n        return [...preValue, note];\n      });\n    } else {\n      alert(\"Enter Title and Content..\");\n    }\n  }\n\n  function deleteNote(id) {\n    setNoteArray((preValue) => {\n      return preValue.filter((eachNote, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    \n    <div className=\"Container\">\n      <Header />\n      <CreateArea newNote={addNote} />\n      <div className=\"notes-container\">\n     {noteArray.map((note, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={note.title}\n            content={note.content}\n            delete={deleteNote}\n          />\n          \n        );\n      })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );"],"sourceRoot":""}